#compdef bse

# main {{{1
_bse() {
  typeset curcontext=$curcontext state lstate line

  typeset -a basissets=(
    '3-21G'
    '6-31++G'
    '6-31++G\*'
    '6-31++G\*\*'
    '6-31++G\*\*-J'
    '6-31+G'
    '6-31+G\*'
    '6-31+G\*-J'
    '6-31+G\*\*'
    '6-311++G'
    '6-311++G\(2d,2p\)'
    '6-311++G\(3df,3pd\)'
    '6-311++G\*'
    '6-311++G\*\*'
    '6-311++G\*\*-J'
    '6-311+G'
    '6-311+G\(2d,p\)'
    '6-311+G\*'
    '6-311+G\*-J'
    '6-311+G\*\*'
    '6-311G'
    '6-311G-J'
    '6-311G\(2df,2pd\)'
    '6-311G\(d,p\)'
    '6-311G\*'
    '6-311G\*\*'
    '6-311G\*\*-RIFIT'
    '6-311xxG\(d,p\)'
    '6-31G'
    '6-31G-Blaudeau'
    '6-31G-J'
    '6-31G\(2df,p\)'
    '6-31G\(3df,3pd\)'
    '6-31G\(d,p\)'
    '6-31G\*'
    '6-31G\*-Blaudeau'
    '6-31G\*\*'
    '6-31G\*\*-RIFIT'
    'apr-cc-pV\(Q+d\)Z'
    'aug-cc-pV5Z'
    'aug-cc-pV5Z-PP'
    'aug-cc-pV5Z-PP-RIFIT'
    'aug-cc-pV5Z-RIFIT'
    'aug-cc-pV6Z'
    'aug-cc-pV6Z-RIFIT'
    'aug-cc-pVDZ'
    'aug-cc-pVDZ-PP'
    'aug-cc-pVDZ-PP-RIFIT'
    'aug-cc-pVDZ-RIFIT'
    'aug-cc-pVQZ'
    'aug-cc-pVQZ-PP'
    'aug-cc-pVQZ-PP-RIFIT'
    'aug-cc-pVQZ-RIFIT'
    'aug-cc-pVTZ'
    'aug-cc-pVTZ-PP'
    'aug-cc-pVTZ-PP-RIFIT'
    'aug-cc-pVTZ-RIFIT'
    'aug-cc-pwCV5Z'
    'aug-cc-pwCV5Z-PP'
    'aug-cc-pwCV5Z-PP-RIFIT'
    'aug-cc-pwCV5Z-RIFIT'
    'aug-cc-pwCVDZ'
    'aug-cc-pwCVDZ-PP'
    'aug-cc-pwCVDZ-PP-RIFIT'
    'aug-cc-pwCVDZ-RIFIT'
    'aug-cc-pwCVQZ'
    'aug-cc-pwCVQZ-PP'
    'aug-cc-pwCVQZ-PP-RIFIT'
    'aug-cc-pwCVQZ-RIFIT'
    'aug-cc-pwCVTZ'
    'aug-cc-pwCVTZ-PP'
    'aug-cc-pwCVTZ-PP-RIFIT'
    'aug-cc-pwCVTZ-RIFIT'
    'cc-pCVDZ-F12'
    'cc-pCVDZ-F12-RIFIT'
    'cc-pCVQZ-F12'
    'cc-pCVQZ-F12-RIFIT'
    'cc-pCVTZ-F12'
    'cc-pCVTZ-F12-RIFIT'
    'cc-pV5Z'
    'cc-pV5Z-PP'
    'cc-pV5Z-PP-RIFIT'
    'cc-pV5Z-RIFIT'
    'cc-pV6Z'
    'cc-pV6Z-RIFIT'
    'cc-pVDZ'
    'cc-pVDZ-PP'
    'cc-pVDZ-PP-RIFIT'
    'cc-pVDZ-RIFIT'
    'cc-pVQZ'
    'cc-pVQZ-PP'
    'cc-pVQZ-PP-RIFIT'
    'cc-pVQZ-RIFIT'
    'cc-pVTZ'
    'cc-pVTZ-PP'
    'cc-pVTZ-PP-RIFIT'
    'cc-pVTZ-RIFIT'
    'cc-pwCV5Z'
    'cc-pwCV5Z-PP'
    'cc-pwCV5Z-PP-RIFIT'
    'cc-pwCV5Z-RIFIT'
    'cc-pwCVDZ'
    'cc-pwCVDZ-PP'
    'cc-pwCVDZ-PP-RIFIT'
    'cc-pwCVDZ-RIFIT'
    'cc-pwCVQZ'
    'cc-pwCVQZ-PP'
    'cc-pwCVQZ-PP-RIFIT'
    'cc-pwCVQZ-RIFIT'
    'cc-pwCVTZ'
    'cc-pwCVTZ-PP'
    'cc-pwCVTZ-PP-RIFIT'
    'cc-pwCVTZ-RIFIT'
    'CRENBL'
    'def2-ECP'
    'def2-QZVP'
    'def2-QZVP-RIFIT'
    'def2-QZVPD'
    'def2-QZVPP'
    'def2-QZVPP-RIFIT'
    'def2-QZVPPD'
    'def2-QZVPPD-RIFIT'
    'def2-SV\(P\)'
    'def2-SV\(P\)-JKFIT'
    'def2-SV\(P\)-RIFIT'
    'def2-SVP'
    'def2-SVP-RIFIT'
    'def2-SVPD'
    'def2-SVPD-RIFIT'
    'def2-TZVP'
    'def2-TZVP-RIFIT'
    'def2-TZVPD'
    'def2-TZVPD-RIFIT'
    'def2-TZVPP'
    'def2-TZVPP-RIFIT'
    'def2-TZVPPD'
    'def2-TZVPPD-RIFIT'
    'def2-universal-JFIT'
    'def2-universal-JKFIT'
    'jul-cc-pV\(D+d\)Z'
    'jul-cc-pV\(Q+d\)Z'
    'jul-cc-pV\(T+d\)Z'
    'jun-cc-pV\(D+d\)Z'
    'jun-cc-pV\(Q+d\)Z'
    'jun-cc-pV\(T+d\)Z'
    'LANL08'
    'LANL08+'
    'LANL08\(d\)'
    'LANL08\(f\)'
    'LANL2DZ'
    'LANL2DZ\ ECP'
    'LANL2DZdp'
    'LANL2TZ'
    'LANL2TZ+'
    'LANL2TZ\(f\)'
    'may-cc-pV\(Q+d\)Z'
    'may-cc-pV\(T+d\)Z'
    'Sapporo-DKH3-DZP-2012'
    'Sapporo-DKH3-DZP-2012-diffuse'
    'Sapporo-DKH3-QZP-2012'
    'Sapporo-DKH3-QZP-2012-diffuse'
    'Sapporo-DKH3-TZP-2012'
    'Sapporo-DKH3-TZP-2012-diffuse'
    'Sapporo-DZP-2012'
    'Sapporo-DZP-2012-diffuse'
    'Sapporo-QZP-2012'
    'Sapporo-QZP-2012-diffuse'
    'Sapporo-TZP-2012'
    'Sapporo-TZP-2012-diffuse'
    'STO-3G'
    'Stuttgart\ RLC'
    'Stuttgart\ RLC\ ECP'
  )

  typeset -a elements=(
    H                    He
    Li Be B  C  N  O  F  Ne
    Na Mg Al Si P  S  Cl Ar
    K  Ca             Br Kr
                      I  Xe
  )

  typeset -a families=(
    acvxz-j
    ahlrichs
    ahlrichs_dhf
    ahlrichs_fit
    ahlrichs_x2c
    ano
    ano_claudino
    aug_mcc
    binning
    blaudeau
    ccj
    cologne
    crenb
    demon2k
    dfo
    dgauss
    dunning
    dunning_dk
    dunning_dk3
    dunning_f12
    dunning_f12_fit
    dunning_fit
    dunning_hay
    dunning_pp
    dunning_pp_fit
    dunning_sf
    dunning_x2c
    huzinaga
    iglo
    jensen
    jgauss
    jorge
    koga
    lanl
    lehtola_emd
    lehtola_hgbs
    lehtola_sap
    nasa
    orp
    partridge
    paschoal
    pople
    pople_fit
    pople_mod
    ranasinghe
    sadlej
    sapporo
    sarc
    sauer_j
    sbkjc
    sto
    stuttgart
    truhlar
    ugbs
    wachters
    zorilla
    zorrilla
  )

  typeset -a formats=(
    bsedebug
    cp2k
    gamess_uk
    gamess_us
    gaussian94
    json
    molcas
    molpro
    nwchem
    orca
    psi4
    qchem
    turbomole
  )

  typeset -a reffmts=(
    bib
    json
    txt
  )

  typeset -a roles=(
    orbital
    jfit
    jkfit
    rifit
    optri
    admmfit
    dftxfit
    dftjfit
    guess
  )

  _arguments \
    '(- *)'{-h,--help}'[show this help message and exit]' \
    '(- *)'-V"[show program's version number and exit]" \
    '(-d --data)'{-d,--data}'[Override which data directory to use]:PATH:_files -/' \
    '(-o --output)'{-o,--output}'[Output to given file rather than stdout]:PATH:_files' \
    '*::bse command:_bse_command'
}

# _bse-command {{{1
(( $+functions[_bse_command] )) || _bse_command() {
  typeset -a _bse_cmds=(
    'autoabs-basis:Form AutoABS auxiliary basis'
    'autoaux-basis:Form AutoAux auxiliary basis'
    'convert-basis:Convert basis set files from one format to another'
    'create-bundle:Create a bundle of basis sets'
    'get-basis:Output a formatted basis set'
    'get-data-dir:Output the default data directory of this package'
    'get-family-notes:Get the notes of a family of basis sets'
    'get-family:Output the family of a basis set'
    'get-info:Output general info and metadata for a basis set'
    'get-notes:Output the notes for a basis set'
    'get-refs:Output references for a basis set'
    'get-versions:Output a list all available versions of a basis set'
    'list-basis-sets:Output a list all available basis sets and descriptions'
    'list-families:Output a list all available basis set families'
    'list-formats:Output a list all available basis set formats and descriptions'
    'list-reader-formats:Output a list of basis set formats that can be read'
    'list-ref-formats:Output a list all available reference formats and descriptions'
    'list-roles:Output a list all available roles and descriptions'
    'list-writer-formats:Output a list available basis set formats that can be written'
    'lookup-by-role:Lookup a companion/auxiliary basis by primary basis and role'
  )

  if (( CURRENT == 1 )); then
    _describe -t commands 'bse command' _bse_cmds
  else
    typeset curcontext="$curcontext" ret=1

    cmd="${${_bse_cmds[(r)$words[1]:*]%%:*}}"

    if (( $#cmd )); then
      curcontext="${curcontext%:*:*}:bse-${cmd}:"

      if [ $cmd = 'help' ]; then
        _message 'no more arguments'
      elif ! _call_function ret _bse-$cmd; then
	_default && ret=0
      fi
    else
      _default && ret=0
    fi
    return ret
  fi
}

(( $+functions[_bse-get-basis] )) || _bse-get-basis() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    --elements"[Which elements of the basis set to output. Default is all defined in the given basis]:ELEMENTS:_values -s, ELEMENTS $elements" \
    --version'[Which version of the basis set to output. Default is the latest version]:VERSION' \
    --noheader'[Do not output the header at the top]' \
    --unc-gen'[Remove general contractions]' \
    --unc-spdf'[Remove combined sp, spd, ... contractions]' \
    --unc-seg'[Remove general contractions]' \
    --opt-gen'[Optimize general contractions]' \
    --make-gen'[Make the basis set as generally-contracted as possible]' \
    --aug-steep'[Augment with n steep functions]:AUG_STEEP' \
    --aug-diffuse'[Augment with n diffuse functions]:AUG_DIFFUSE' \
    --get-aux'[Instead of the orbital basis, get an automatically formed auxiliary basis]:GET_AUX' \
    "1:basis:_values basis $basissets" \
    "2:fmt:_values fmt $formats" \
    && return 0
}

(( $+functions[_bse-get-family] )) || _bse-get-family() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    "1:basis:_values basis $basissets" \
    && return 0
}

(( $+functions[_bse-get-family-notes] )) || _bse-get-family-notes() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    "1:family:_values family $families" \
    && return 0
}

(( $+functions[_bse-get-info] )) || _bse-get-info() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    "1:basis:_values basis $basissets" \
    && return 0
}

(( $+functions[_bse-get-notes] )) || _bse-get-notes() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    "1:basis:_values basis $basissets" \
    && return 0
}

(( $+functions[_bse-get-refs] )) || _bse-get-refs() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    --elements"[Which elements to output the references for. Default is all defined in the given basis.]:ELEMENTS:_values -s, ELEMENTS $elements" \
    --version'[Which version of the basis set to get the references for]:VERSION' \
    "1:basis:_values basis $basissets" \
    "2:reffmt:_values reffmt $reffmts" \
    && return 0
}

(( $+functions[_bse-get-versions] )) || _bse-get-versions() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    "1:basis:_values basis $basissets" \
    && return 0
}

(( $+functions[_bse-list-basis-sets] )) || _bse-list-basis-sets() {  # {{{1
  _arguments \
    '(- *)'{-h,--help} \
    '(-n --no-description)'{-n,--no-description}'[Print only the basis set names]' \
    '(-f --family)'{-f,--family}"[Limit the basis set list to only the specified family]:FAMILY:($families)" \
    '(-r --role)'{-r,--role}"[Limit the basis set list to only the specified role]:ROLE:($roles)" \
    '(-s --substr)'{-s,--substr}'[Limit the basis set list to only basis sets whose name contains the specified substring]:SUBSTR' \
    '(-e --elements)'{-e,--elements}"[Limit the basis set list to only basis sets that contain all the given elements]:ELEMENTS:_values -s, ELEMENTS $elements" \
    && return 0
}

(( $+functions[_bse-list-formats] )) || _bse-list-formats() {  # {{{1
  _arguments \
    '(- *)'{-h,--help}'[show this help message and exit]' \
    '(- *)'{-n,--no-description}'[Print only the format names]' \
    && return 0
}

(( $+functions[_bse-list-ref-formats] )) || _bse-list-ref-formats() {  # {{{1
  _arguments \
    '(- *)'{-h,--help}'[show this help message and exit]' \
    '(- *)'{-n,--no-description}'[Print only the format names]' \
    && return 0
}

(( $+functions[_bse-list-roles] )) || _bse-list-roles() {  # {{{1
  _arguments \
    '(- *)'{-h,--help}'[show this help message and exit]' \
    '(- *)'{-n,--no-description}'[Print only the format names]' \
    && return 0
}

# }}}1

# vi:fdm=marker ft=zsh
