#compdef cmake

# 4.0.3

typeset -ar GENERATORS=(
  'Unix Makefiles'
  'Ninja'
  'Ninja Multi-Config'
)

typeset -ar hoge=(
  #capabilities              - Report capabilities built into cmake in JSON format
  #cat [--] <files>...       - concat the files and print them to the standard output
  #chdir dir cmd [args...]   - run command in a given directory
  #compare_files [--ignore-eol] file1 file2
  #                            - check if file1 is same as file2
  #copy <file>... destination  - copy files to destination (either file or directory)
  #copy_directory <dir>... destination   - copy content of <dir>... directories to 'destination' directory
  #copy_directory_if_different <dir>... destination   - copy changed content of <dir>... directories to 'destination' directory
  #copy_if_different <file>... destination  - copy files if it has changed
  #echo [<string>...]        - displays arguments as text
  #echo_append [<string>...] - displays arguments as text but no new line
  #env [--unset=NAME ...] [NAME=VALUE ...] [--] <command> [<arg>...]
  #                          - run command in a modified environment
  #environment               - display the current environment
  #make_directory <dir>...   - create parent and <dir> directories
  #md5sum <file>...          - create MD5 checksum of files
  #sha1sum <file>...         - create SHA1 checksum of files
  #sha224sum <file>...       - create SHA224 checksum of files
  #sha256sum <file>...       - create SHA256 checksum of files
  #sha384sum <file>...       - create SHA384 checksum of files
  #sha512sum <file>...       - create SHA512 checksum of files
  #remove [-f] <file>...     - remove the file(s), use -f to force it (deprecated: use rm instead)
  #remove_directory <dir>... - remove directories and their contents (deprecated: use rm instead)
  #rename oldname newname    - rename a file or directory (on one volume)
  #rm [-rRf] [--] <file/dir>... - remove files or directories, use -f to force it, r or R to remove directories and their contents recursively
  #sleep <number>...         - sleep for given number of seconds
  #tar [cxt][vf][zjJ] file.tar [file/dir1 file/dir2 ...]
  #                          - create or extract a tar or zip archive
  #time command [args...]    - run command and display elapsed time
  #touch <file>...           - touch a <file>.
  #touch_nocreate <file>...  - touch a <file> but do not create it.
  #create_symlink old new    - create a symbolic link new -> old
  #create_hardlink old new   - create a hard link new -> old
  #true                      - do nothing with an exit code of 0
  #false                     - do nothing with an exit code of 1
)

# _cmake-preset() { cmake --list-presets | awk '$0 ~ /^\s/ {print $1}'; }

typeset -ar args=(
  -S-'[Explicitly specify a source directory.]:path-to-source:_path_files -/'
  -B-'[Explicitly specify a build directory.]:path-to-build:_path_files -/'
  -C'[Pre-load a script to populate the cache.]:initial-cache:_path_files -/'
  '*'-D-'[Create or update a cmake cache entry.]:var'
  '*'-U-'[Remove matching entries from CMake cache.]:globbing_expr'
  -G-'[Specify a build system generator.]:generator-name:_values generator ${(@)GENERATORS}'
  -T'[Specify toolset name if supported by generator.]:toolset-name'
  --toolchain'[Specify toolchain file]:CMAKE_TOOLCHAIN_FILE:_files -g "*.cmake"'
  --install-prefix'[Specify install directory]:CMAKE_INSTALL_PREFIX:_path_files -/'
  '(-Wno-dev)'-Wdev'[Enable developer warnings.]'
  '(-Wdev)'-Wno-dev'[Suppress developer warnings.]'
  '(-Wno-error=dev)'-Werror=dev'[Make developer warnings errors.]'
  '(-Werror=dev)'-Wno-error=dev'[Make developer warnings not errors.]'
  '(-Wno-deprecated)'-Wdeprecated'[Enable deprecation warnings.]'
  '(-Wdeprecated)'-Wno-deprecated'[Suppress deprecation warnings.]'
  '(-Wno-error=deprecated)'-Werror=deprecated'[Make deprecated macro and function warnings errors.]'
  '(-Werror=deprecated)'-Wno-error=deprecated'[Make deprecated macro and function warnings not errors.]'
  --preset='[Specify a configure preset.]:preset'
  '(- *)'--list-presets'[List available presets.]'
  -E'[CMake command mode.]:command'
  '(-L -LA -LAH -LH)'{-L,-LA,-LAH,-LH}'[List non-advanced cached variables.]'
  --fresh'[Configure a fresh build tree, removing any existing cache file.]'
  '(--install)'--build'[Build a CMake-generated project binary tree.]:dir:_path_files -/'
  '(--build)'--install'[Install a CMake-generated project binary]:dir:_path_files -/'
  -N'[View mode only.]'
  -P'[Process script mode.]:file:_files -g "*.cmake"'
  '(- *)'--system-information'[Dump information about this system.]'
  '(- *)'--print-config-dir'[Print CMake config directory for user-wide FileAPI queries.]'
  --log-level='[Set the verbosity of messages from CMake files.]:LEVEL:(ERROR WARNING NOTICE STATUS VERBOSE DEBUG TRACE)'
  --debug-trycompile'[Do not delete the try_compile build tree. Only useful on one try_compile at a time.]'
  --debug-output'[Put cmake in a debug mode.]'
  --debug-find'[Put cmake find in a debug mode.]'
  --trace'[Put cmake in trace mode.]'
  --trace-expand'[Put cmake in trace mode with variable expansion.]'
  --warn-uninitialized'[Warn about uninitialized values.]'
  --no-warn-unused-cli"[Don't warn about command line options.]"
  --check-system-vars'[Find problems with variable usage in system files.]'
  --compile-no-warning-as-error'[Ignore COMPILE_WARNING_AS_ERROR property and CMAKE_COMPILE_WARNING_AS_ERROR variable.]'
  '(- *)'{-h,-H,--help}'[Print usage information and exit.]'
  '(- *)'--version'[Print version number and exit.]'
  '(- *)'--help-full'[Print all help manuals and exit.]'
  '(- *)'--help-manual'[Print one help manual and exit.]:man:_values man $(cmake --help-manual-list | sed -e s/"[^a-z-].*"//)'
  '(- *)'--help-manual-list'[List help manuals available and exit.]'
  '(- *)'--help-command'[Print help for one command and exit.]:cmd:_values cmd $(cmake --help-command-list)'
  '(- *)'--help-command-list'[List commands with help available and exit.]'
  '(- *)'--help-commands'[Print cmake-commands manual and exit.]'
  '(- *)'--help-module'[Print help for one module and exit.]:mod:_values mod $(cmake --help-module-list)'
  '(- *)'--help-module-list'[List modules with help available and exit.]'
  '(- *)'--help-modules'[Print cmake-modules manual and exit.]'
  '(- *)'--help-policy'[Print help for one policy and exit.]:cmp:_values cmp $(cmake --help-policy-list)'
  '(- *)'--help-policy-list'[List policies with help available and exit.]'
  '(- *)'--help-policies'[Print cmake-policies manual and exit.]'
  '(- *)'--help-property'[Print help for one property and exit.]:prop:_values prop $(cmake --help-property-list)'
  '(- *)'--help-property-list'[List properties with help available and exit.]'
  '(- *)'--help-properties'[Print cmake-properties manual and exit.]'
  '(- *)'--help-variable'[Print help for one variable and exit.]:var:_values mod $(cmake --help-variable-list)'
  '(- *)'--help-variable-list'[List variables with help available and exit.]'
  '(- *)'--help-variables'[Print cmake-variables manual and exit.]'


  '(-j --parallel)'{-j,--parallel}'[The maximum number of concurrent processes to use when building.]:jobs'
  --clean-first'[Build target clean first, then build.]'

  --prefix'[Override the installation prefix, CMAKE_INSTALL_PREFIX.]:prefix:_path_files -/'
  --strip'[Strip before installing.]'
  '(-v --verbose)'{-v,--verbose}'[Enable verbose output.]'
)
_arguments -S "${(@)args}"

return

: << EOF
Usage

  cmake [options] <path-to-source>
  cmake [options] <path-to-existing-build>
  cmake [options] -S <path-to-source> -B <path-to-build>

Specify a source directory to (re-)generate a build system for it in the
current working directory.  Specify an existing build directory to
re-generate its build system.

Options
  -S <path-to-source>          = Explicitly specify a source directory.
  -B <path-to-build>           = Explicitly specify a build directory.
  -C <initial-cache>           = Pre-load a script to populate the cache.
  -D <var>[:<type>]=<value>    = Create or update a cmake cache entry.
  -U <globbing_expr>           = Remove matching entries from CMake cache.
  -G <generator-name>          = Specify a build system generator.
  -T <toolset-name>            = Specify toolset name if supported by
                                 generator.
  -A <platform-name>           = Specify platform name if supported by
                                 generator.
  --toolchain <file>           = Specify toolchain file
                                 [CMAKE_TOOLCHAIN_FILE].
  --install-prefix <directory> = Specify install directory
                                 [CMAKE_INSTALL_PREFIX].
  --project-file <project-file-name>
                               = Specify an alternate project file name.
  -Wdev                        = Enable developer warnings.
  -Wno-dev                     = Suppress developer warnings.
  -Werror=dev                  = Make developer warnings errors.
  -Wno-error=dev               = Make developer warnings not errors.
  -Wdeprecated                 = Enable deprecation warnings.
  -Wno-deprecated              = Suppress deprecation warnings.
  -Werror=deprecated           = Make deprecated macro and function warnings
                                 errors.
  -Wno-error=deprecated        = Make deprecated macro and function warnings
                                 not errors.
  --preset <preset>,--preset=<preset>
                               = Specify a configure preset.
  --list-presets[=<type>]      = List available presets.
  --workflow [<options>]       = Run a workflow preset.
  -E                           = CMake command mode.  Run "cmake -E" for a
                                 summary of commands.
  -L[A][H]                     = List non-advanced cached variables.
  -LR[A][H] <regex>            = Show cached variables that match the regex.
  --fresh                      = Configure a fresh build tree, removing any
                                 existing cache file.
  --build <dir>                = Build a CMake-generated project binary tree.
                                 Run "cmake --build" to see compatible
                                 options and a quick help.
  --install <dir>              = Install a CMake-generated project binary
                                 tree.  Run "cmake --install" to see
                                 compatible options and a quick help.
  --open <dir>                 = Open generated project in the associated
                                 application.
  -N                           = View mode only.
  -P <file>                    = Process script mode.
  --find-package               = Legacy pkg-config like mode.  Do not use.
  --graphviz=<file>            = Generate graphviz of dependencies, see
                                 CMakeGraphVizOptions.cmake for more.
  --system-information [file]  = Dump information about this system.
  --print-config-dir           = Print CMake config directory for user-wide
                                 FileAPI queries.
  --log-level=<ERROR|WARNING|NOTICE|STATUS|VERBOSE|DEBUG|TRACE>
                               = Set the verbosity of messages from CMake
                                 files.  --loglevel is also accepted for
                                 backward compatibility reasons.
  --log-context                = Prepend log messages with context, if given
  --debug-trycompile           = Do not delete the try_compile build tree.
                                 Only useful on one try_compile at a time.
  --debug-output               = Put cmake in a debug mode.
  --debug-find                 = Put cmake find in a debug mode.
  --debug-find-pkg=<pkg-name>[,...]
                               = Limit cmake debug-find to the
                                 comma-separated list of packages
  --debug-find-var=<var-name>[,...]
                               = Limit cmake debug-find to the
                                 comma-separated list of result variables
  --trace                      = Put cmake in trace mode.
  --trace-expand               = Put cmake in trace mode with variable
                                 expansion.
  --trace-format=<human|json-v1>
                               = Set the output format of the trace.
  --trace-source=<file>        = Trace only this CMake file/module.  Multiple
                                 options allowed.
  --trace-redirect=<file>      = Redirect trace output to a file instead of
                                 stderr.
  --warn-uninitialized         = Warn about uninitialized values.
  --no-warn-unused-cli         = Don't warn about command line options.
  --check-system-vars          = Find problems with variable usage in system
                                 files.
  --compile-no-warning-as-error= Ignore COMPILE_WARNING_AS_ERROR property and
                                 CMAKE_COMPILE_WARNING_AS_ERROR variable.
  --link-no-warning-as-error   = Ignore LINK_WARNING_AS_ERROR property and
                                 CMAKE_LINK_WARNING_AS_ERROR variable.
  --profiling-format=<fmt>     = Output data for profiling CMake scripts.
                                 Supported formats: google-trace
  --profiling-output=<file>    = Select an output path for the profiling data
                                 enabled through --profiling-format.
  -h,-H,--help,-help,-usage,/? = Print usage information and exit.
  --version,-version,/V [<file>]
                               = Print version number and exit.
  --help <keyword> [<file>]    = Print help for one keyword and exit.
  --help-full [<file>]         = Print all help manuals and exit.
  --help-manual <man> [<file>] = Print one help manual and exit.
  --help-manual-list [<file>]  = List help manuals available and exit.
  --help-command <cmd> [<file>]= Print help for one command and exit.
  --help-command-list [<file>] = List commands with help available and exit.
  --help-commands [<file>]     = Print cmake-commands manual and exit.
  --help-module <mod> [<file>] = Print help for one module and exit.
  --help-module-list [<file>]  = List modules with help available and exit.
  --help-modules [<file>]      = Print cmake-modules manual and exit.
  --help-policy <cmp> [<file>] = Print help for one policy and exit.
  --help-policy-list [<file>]  = List policies with help available and exit.
  --help-policies [<file>]     = Print cmake-policies manual and exit.
  --help-property <prop> [<file>]
                               = Print help for one property and exit.
  --help-property-list [<file>]= List properties with help available and
                                 exit.
  --help-properties [<file>]   = Print cmake-properties manual and exit.
  --help-variable var [<file>] = Print help for one variable and exit.
  --help-variable-list [<file>]= List variables with help available and exit.
  --help-variables [<file>]    = Print cmake-variables manual and exit.

Generators

The following generators are available on this platform (* marks default):
  Green Hills MULTI            = Generates Green Hills MULTI files
                                 (experimental, work-in-progress).
* Unix Makefiles               = Generates standard UNIX makefiles.
  Ninja                        = Generates build.ninja files.
  Ninja Multi-Config           = Generates build-<Config>.ninja files.
  Watcom WMake                 = Generates Watcom WMake makefiles.
  CodeBlocks - Ninja           = Generates CodeBlocks project files
                                 (deprecated).
  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files
                                 (deprecated).
  CodeLite - Ninja             = Generates CodeLite project files
                                 (deprecated).
  CodeLite - Unix Makefiles    = Generates CodeLite project files
                                 (deprecated).
  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files
                                 (deprecated).
  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files
                                 (deprecated).
  Kate - Ninja                 = Generates Kate project files (deprecated).
  Kate - Ninja Multi-Config    = Generates Kate project files (deprecated).
  Kate - Unix Makefiles        = Generates Kate project files (deprecated).
  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files
                                 (deprecated).
  Sublime Text 2 - Unix Makefiles
                               = Generates Sublime Text 2 project files
                                 (deprecated).

EOF

# vim:ft=zsh
