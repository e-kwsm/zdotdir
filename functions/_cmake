#compdef cmake

# 3.26.4

typeset -ar GENERATORS=(
  'Unix Makefiles'
  'Ninja'
  'Ninja Multi-Config'
)

typeset -ar args=(
  -S'[Explicitly specify a source directory.]:path-to-source:_path_files -/'
  -B'[Explicitly specify a build directory.]:path-to-build:_path_files -/'
  -C'[Pre-load a script to populate the cache.]:initial-cache:_path_files -/'
  '*'-D'[Create or update a cmake cache entry.]:var'
  -U'[Remove matching entries from CMake cache.]:globbing_expr'
  -G'[Specify a build system generator.]:generator-name:_values generator ${(@)GENERATORS}'
  -T'[Specify toolset name if supported by generator.]:toolset-name'
  --toolchain'[Specify toolchain file]:CMAKE_TOOLCHAIN_FILE:_files -g "*.cmake"'
  --install-prefix'[Specify install directory]:CMAKE_INSTALL_PREFIX:_path_files -/'
  '(-Wno-dev)'-Wdev'[Enable developer warnings.]'
  '(-Wdev)'-Wno-dev'[Suppress developer warnings.]'
  '(-Wno-error=dev)'-Werror=dev'[Make developer warnings errors.]'
  '(-Werror=dev)'-Wno-error=dev'[Make developer warnings not errors.]'
  '(-Wno-deprecated)'-Wdeprecated'[Enable deprecation warnings.]'
  '(-Wdeprecated)'-Wno-deprecated'[Suppress deprecation warnings.]'
  '(-Wno-error=deprecated)'-Werror=deprecated'[Make deprecated macro and function warnings errors.]'
  '(-Werror=deprecated)'-Wno-error=deprecated'[Make deprecated macro and function warnings not errors.]'
  --preset='[Specify a configure preset.]:preset:_files -g "*.json"'
  '(- *)'--list-presets'[List available presets.]'
  -E'[CMake command mode.]:command'
  '(-L -LA -LAH -LH)'{-L,-LA,-LAH,-LH}'[List non-advanced cached variables.]'
  --fresh'[Configure a fresh build tree, removing any existing cache file.]'
  --build'[Build a CMake-generated project binary tree.]:dir:_path_files -/'
  --install'[Install a CMake-generated project binary]:dir:_path_files -/'
  -N'[View mode only.]'
  -P'[Process script mode.]:file:_files -g "*.cmake"'
  '(- *)'--system-information'[Dump information about this system.]'
  --log-level='[Set the verbosity of messages from CMake files.]:LEVEL:(ERROR WARNING NOTICE STATUS VERBOSE DEBUG TRACE)'
  --debug-trycompile'[Do not delete the try_compile build tree. Only useful on one try_compile at a time.]'
  --debug-output'[Put cmake in a debug mode.]'
  --debug-find'[Put cmake find in a debug mode.]'
  --trace'[Put cmake in trace mode.]'
  --trace-expand'[Put cmake in trace mode with variable expansion.]'
  --warn-uninitialized'[Warn about uninitialized values.]'
  --no-warn-unused-cli"[Don't warn about command line options.]"
  --check-system-vars'[Find problems with variable usage in system files.]'
  --compile-no-warning-as-error'[Ignore COMPILE_WARNING_AS_ERROR property and CMAKE_COMPILE_WARNING_AS_ERROR variable.]'
  '(- *)'{-h,-H,--help}'[Print usage information and exit.]'
  '(- *)'--version'[Print version number and exit.]'
  '(- *)'--help-full'[Print all help manuals and exit.]'
  '(- *)'--help-manual'[Print one help manual and exit.]:man:_values man $(cmake --help-manual-list | sed -e s/"[^a-z-].*"//)'
  '(- *)'--help-manual-list'[List help manuals available and exit.]'
  '(- *)'--help-command'[Print help for one command and exit.]:cmd:_values cmd $(cmake --help-command-list)'
  '(- *)'--help-command-list'[List commands with help available and exit.]'
  '(- *)'--help-commands'[Print cmake-commands manual and exit.]'
  '(- *)'--help-module'[Print help for one module and exit.]:mod:_values mod $(cmake --help-module-list)'
  '(- *)'--help-module-list'[List modules with help available and exit.]'
  '(- *)'--help-modules'[Print cmake-modules manual and exit.]'
  '(- *)'--help-policy'[Print help for one policy and exit.]:cmp:_values cmp $(cmake --help-policy-list)'
  '(- *)'--help-policy-list'[List policies with help available and exit.]'
  '(- *)'--help-policies'[Print cmake-policies manual and exit.]'
  '(- *)'--help-property'[Print help for one property and exit.]:prop:_values prop $(cmake --help-property-list)'
  '(- *)'--help-property-list'[List properties with help available and exit.]'
  '(- *)'--help-properties'[Print cmake-properties manual and exit.]'
  '(- *)'--help-variable'[Print help for one variable and exit.]:var:_values mod $(cmake --help-variable-list)'
  '(- *)'--help-variable-list'[List variables with help available and exit.]'
  '(- *)'--help-variables'[Print cmake-variables manual and exit.]'
)
_arguments -S "${(@)args}"

# vim:ft=zsh
