#compdef yapf

# yapf 0.43.0

typeset -ar args=(
  '(- *)'{-h,--help}'[show this help message and exit]'
  '(- *)'{-v,--version}"[show program's version number and exit]"
  '(-d --diff -i --in-place)'{-d,--diff}'[print the diff for the fixed source]'
  '(-i --in-place -d --diff)'{-i,--in-place}'[make changes to files in place]'
  '(- *)'--style-help'[show style settings and exit; this output can be saved to .style.yapf to make your settings permanent]'
  --no-local-style"[don't search for local style definition]"
  '(-p --parallel)'{-p,--parallel}'[run yapf in parallel when formatting multiple files.]'
  '(-vv --verbose)'{-vv,--verbose}'[print out file names while processing]'
  '*:files:_files -g "*.py"'
)
_arguments "${(@)args}"

: << EOF
usage: yapf [-h] [-v] [-d | -i | -q] [-r | -l START-END] [-e PATTERN]
            [--style STYLE] [--style-help] [--no-local-style] [-p] [-m] [-vv]
            [files ...]

Formatter for Python code.

positional arguments:
  files                 reads from stdin when no files are specified.

options:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit
  -d, --diff            print the diff for the fixed source
  -i, --in-place        make changes to files in place
  -q, --quiet           output nothing and set return value
  -r, --recursive       run recursively over directories
  -l, --lines START-END
                        range of lines to reformat, one-based
  -e, --exclude PATTERN
                        patterns for files to exclude from formatting
  --style STYLE         specify formatting style: either a style name (for
                        example "pep8" or "google"), or the name of a file
                        with style settings. The default is pep8 unless a
                        .style.yapf or setup.cfg or pyproject.toml file
                        located in the same directory as the source or one of
                        its parent directories (for stdin, the current
                        directory is used).
  --style-help          show style settings and exit; this output can be saved
                        to .style.yapf to make your settings permanent
  --no-local-style      don't search for local style definition
  -p, --parallel        run YAPF in parallel when formatting multiple files.
  -m, --print-modified  print out file names of modified files
  -vv, --verbose        print out file names while processing
EOF

# vim:ft=zsh
